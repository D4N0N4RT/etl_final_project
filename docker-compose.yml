services:
  airflow-postgres:
    image: postgres:15
    container_name: airflow_postgres
    environment:
      POSTGRES_USER: airflow_user
      POSTGRES_PASSWORD: airflow_pass
      POSTGRES_DB: airflow_db
    ports:
      - "5433:5432"
    volumes:
      - airflow_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d airflow_db -U airflow_user" ]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow-init:
    image: apache/airflow:2.7.2
    container_name: airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: a1b2c3d4e5f6a7b8c9d0e1f2g3h4i5j6
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow_user:airflow_pass@airflow_postgres:5432/airflow_db
    depends_on:
      airflow-postgres:
        condition: service_healthy
    entrypoint: [ "/bin/bash", "-c" ]
    command:
      - |
        airflow db init && \
        airflow db upgrade && \
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
        airflow connections add 'airflow_mongo_conn' \
          --conn-type 'mongo' \
          --conn-host 'mongo' \
          --conn-schema '${MONGO_DB}' \
          --conn-login '${MONGO_USER}' \
          --conn-password '${MONGO_PASSWORD}' \
          --conn-port '${MONGO_PORT}' \
          --conn-extra '{"srv": false, "ssl": false, "allow_insecure": true, "authSource": "admin"}' &&
        airflow connections add 'airflow_postgres_conn' \
          --conn-type 'postgres' \
          --conn-host 'postgres' \
          --conn-schema '${PG_DB}' \
          --conn-login '${PG_USER}' \
          --conn-password '${PG_PASSWORD}' \
          --conn-port '${PG_PORT}'
    volumes:
      - ./logic/airflow_dags:/opt/airflow/dags

  postgres:
    container_name: postgres
    image: postgres:15
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    ports:
      - '5432:${PG_PORT}'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${PG_DB} -U ${PG_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo_db:
    container_name: mongo
    image: mongo:6.0.5
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - '${MONGO_PORT}:27017'
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:${MONGO_PORT}/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5

  database-data-init:
    build: ./services/datagen
    container_name: database-data-init
    depends_on:
      mongo_db:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB: ${MONGO_DB}
      MONGO_HOST: ${MONGO_HOST}
      MMONGO_USER: ${MONGO_USER}
      MONGO_PORT: ${MONGO_PORT}
      DATAGEN_USERS_COUNT: 1000
      DATAGEN_PRODUCTS_COUNT: 500
      DATAGEN_USER_SESSIONS_COUNT: 3000
      DATAGEN_PRODUCT_PRICE_HISTORY_COUNT: 1000
      DATAGEN_EVENT_LOGS_COUNT: 3000
      DATAGEN_SUPPORT_TICKETS_COUNT: 500
      DATAGEN_USER_RECOMMENDATIONS_COUNT: 2000
      DATAGEN_MODERATION_QUEUE_COUNT: 500
      DATAGEN_SEARCH_QUERIES_COUNT: 1500
    volumes:
      - ./logic/data_init:/app/src

  airflow-webserver:
    image: apache/airflow:2.7.2
    container_name: airflow-webserver
    depends_on:
      postgres:
        condition: service_healthy
      airflow-postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
      database-data-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: a1b2c3d4e5f6a7b8c9d0e1f2g3h4i5j6
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow_user:airflow_pass@airflow_postgres:5432/airflow_db
    ports:
      - "8080:8080"
    command: "webserver"
    volumes:
      - ./logic/airflow_dags:/opt/airflow/dags


  airflow-scheduler:
    build: services/airflow/scheduler/
    container_name: airflow-scheduler
    depends_on:
      postgres:
        condition: service_healthy
      airflow-postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
      database-data-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: a1b2c3d4e5f6a7b8c9d0e1f2g3h4i5j6
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow_user:airflow_pass@airflow_postgres:5432/airflow_db
      MYSQL_PASSWORD: ${MONGO_PASSWORD}
      MYSQL_DB: ${MONGO_DB}
      MYSQL_HOST: ${MONGO_HOST}
      MYSQL_USER: ${MONGO_USER}
      MYSQL_PORT: ${MONGO_PORT}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DB: ${PG_DB}
      PG_HOST: ${PG_HOST}
      PG_USER: ${PG_USER}
      PG_PORT: ${PG_PORT}
      AIRFLOW_CONN_POSTGRES_DEFAULT: "postgresql+psycopg2://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:${PG_PORT}/${PG_DB}"

    command: "scheduler"
    volumes:
      - ./logic/airflow_dags:/opt/airflow/dags

volumes:
  airflow_postgres_data:
  postgres_data:
  mysql_data: